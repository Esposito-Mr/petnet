name: Build & Release All Platforms

# This block defines environment variables available to all jobs.
# ⚠️ ACTION REQUIRED: Change 'petnet' to your actual application name.
# This name is used for the macOS .app bundle and Linux packages.
env:
  APP_NAME: petnet

# This workflow runs when you push a tag that starts with "v" (e.g., v1.0.0)
on:
  push:
    tags:
      - 'v*'

jobs:
  # ------ JOB 1: BUILD FOR WINDOWS ------
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true # Enable dependency caching for faster builds
      - name: Install dependencies
        run: flutter pub get
      - name: Build Windows executable
        run: flutter build windows --release
      - name: Zip the portable build files
        run: Compress-Archive -Path build/windows/x64/runner/Release\* -DestinationPath "windows-portable-${{ github.ref_name }}.zip"
        shell: pwsh
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: windows-portable-${{ github.ref_name }}.zip

  # ------ JOB 2: BUILD FOR MACOS ------
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true # Enable dependency caching
      - name: Install dependencies
        run: flutter pub get
      - name: Build macOS application
        run: flutter build macos --release
      - name: Zip the portable .app bundle
        run: zip -r "macos-portable-${{ github.ref_name }}.zip" "build/macos/Build/Products/Release/${{ env.APP_NAME }}.app"
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: macos-portable-${{ github.ref_name }}.zip

  # ------ JOB 3: BUILD FOR ANDROID ------
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Java (Required for Android)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true # Enable dependency caching
      - name: Install dependencies
        run: flutter pub get
      - name: Build Android APK
        run: flutter build apk --release
      - name: Rename APK for release
        run: mv build/app/outputs/flutter-apk/app-release.apk "${{ env.APP_NAME }}-${{ github.ref_name }}.apk"
      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: ${{ env.APP_NAME }}-${{ github.ref_name }}.apk

  # ------ JOB 4: BUILD FOR LINUX ------
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true # Enable dependency caching
      - name: Install Linux build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libgcrypt20-dev rpm fakeroot
      - name: Install dependencies
        run: flutter pub get
      - name: Build Linux executable
        run: flutter build linux --release
      - name: Activate flutter_distributor
        run: dart pub global activate flutter_distributor
      - name: Create Linux packages (.deb and .rpm)
        run: flutter_distributor package --platform linux --targets deb,rpm
      - name: Upload Linux DEB artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb-build
          path: dist/*/*.deb
      - name: Upload Linux RPM artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-rpm-build
          path: dist/*/*.rpm

  # ------ JOB 5: CREATE THE FINAL GITHUB RELEASE ------
  create-release:
    # This job only runs after all build jobs have successfully completed
    needs: [build-windows, build-macos, build-android, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create a release
      
    steps:
      # Download all the build files (artifacts) from the previous jobs
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      # Create a single GitHub Release and attach all the artifacts
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true # Creates a draft release, you must publish it manually
          prerelease: false
          name: Release ${{ github.ref_name }} # e.g., "Release v1.0.10"
          tag_name: ${{ github.ref }}
          # This pattern finds all files in the downloaded artifact subfolders
          files: |
            artifacts/*/*
